name: App CI

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_FORCE_NO_BUILD_CACHE: 1

on:
  push:
    branches: [ "main" ]

jobs:
  frontend-build:
    name: frontend-build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.14

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Build Eslint
        working-directory: ./packages/eslint-plugin-interval-app-styleguide
        run: pnpm initialize

      - name: Eslint-Linting
        working-directory: ./intervalApp
        run:

      - name: Install dependencies
        run: pnpm i

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Pull Vercel Environment Information
        working-directory: ./intervalApp
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts (frontend)
        working-directory: ./intervalApp
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts (frontend) to Vercel
        working-directory: ./intervalApp
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
